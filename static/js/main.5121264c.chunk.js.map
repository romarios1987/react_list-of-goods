{"version":3,"sources":["components/ListOfGoods.js","App.js","index.js"],"names":["ListOfGoods","list","map","item","key","goodsFromServer","App","state","loaded","visibleList","selectedValue","handler","setState","reverseList","prevState","reverse","sortAlphabetical","sort","sortListLength","a","b","length","resetList","onSelectChange","value","target","filter","good","className","this","onClick","type","onChange","event","Array","keys","i","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oOAaeA,G,MAVK,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAClB,4BACGA,EAAKC,KAAI,SAAAC,GAAI,OAAK,wBAAIC,IAAKD,GAAOA,SCDjCE,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA+FaC,E,4MA3FbC,MAAQ,CACNN,KAAM,GACNO,QAAQ,EACRC,YAAa,GACbC,cAAe,K,EAGjBC,QAAU,WACR,EAAKC,SAAS,CACZX,KAAK,GAAD,OAAMI,GACVG,QAAQ,EACRC,YAAY,GAAD,OAAMJ,M,EAIrBQ,YAAc,WACZ,EAAKD,UAAS,SAAAE,GAAS,MAAK,CAC1BL,YAAa,YAAIK,EAAUL,aAAaM,e,EAI5CC,iBAAmB,WACjB,EAAKJ,UAAS,SAAAE,GAAS,MAAK,CAC1BL,YAAa,YAAIK,EAAUL,aAAaQ,Y,EAI5CC,eAAiB,WACf,EAAKN,UAAS,SAAAE,GAAS,MAAK,CAC1BL,YAAa,YAAIK,EAAUL,aACxBQ,MAAK,SAACE,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,e,EAInCC,UAAY,WACV,EAAKV,UAAS,SAAAE,GAAS,MAAK,CAC1BL,YAAY,YAAKK,EAAUb,W,EAI/BsB,eAAiB,YAAiB,IACxBC,EADuB,EAAbC,OACVD,MAER,EAAKZ,UAAS,iBAAO,CACnBF,cAAec,EACff,YAAaJ,EACVqB,QAAO,SAAAC,GAAI,OAAIA,EAAKN,QAAUG,U,uDAI3B,IAAD,OACP,OACE,yBAAKI,UAAU,eAETC,KAAKtB,MAAMC,OAKX,6BACE,4BAAQsB,QAASD,KAAKhB,YAAakB,KAAK,UAAxC,WAGA,4BAAQD,QAASD,KAAKb,iBAAkBe,KAAK,UAA7C,YAGA,4BAAQD,QAASD,KAAKX,eAAgBa,KAAK,UAA3C,kBAGA,4BAAQD,QAASD,KAAKP,UAAWS,KAAK,UAAtC,SAIA,4BACEP,MAAOK,KAAKtB,MAAMG,cAClBsB,SAAU,SAAAC,GAAK,OAAI,EAAKV,eAAeU,KAEtC,YAAIC,MAAM,IAAIC,QAAQjC,KAAI,SAAAkC,GAAC,OAAIA,EAAI,KACjClC,KAAI,SAAAC,GAAI,OAAI,4BAAQqB,MAAOrB,EAAMC,IAAKD,GAAOA,OAGlD,kBAAC,EAAD,CAAaF,KAAM4B,KAAKtB,MAAME,eA1BhC,4BAAQqB,QAASD,KAAKlB,QAASoB,KAAK,UAApC,c,GAxDMM,IAAMC,WCbxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.5121264c.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ListOfGoods = ({ list }) => (\n  <ul>\n    {list.map(item => (<li key={item}>{item}</li>))}\n  </ul>\n);\n\nListOfGoods.propTypes = {\n  list: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default ListOfGoods;\n","import React from 'react';\nimport './App.css';\nimport ListOfGoods from './components/ListOfGoods';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    list: [],\n    loaded: false,\n    visibleList: [],\n    selectedValue: '1',\n  };\n\n  handler = () => {\n    this.setState({\n      list: [...goodsFromServer],\n      loaded: true,\n      visibleList: [...goodsFromServer],\n    });\n  };\n\n  reverseList = () => {\n    this.setState(prevState => ({\n      visibleList: [...prevState.visibleList].reverse(),\n    }));\n  };\n\n  sortAlphabetical = () => {\n    this.setState(prevState => ({\n      visibleList: [...prevState.visibleList].sort(),\n    }));\n  };\n\n  sortListLength = () => {\n    this.setState(prevState => ({\n      visibleList: [...prevState.visibleList]\n        .sort((a, b) => a.length - b.length),\n    }));\n  };\n\n  resetList = () => {\n    this.setState(prevState => ({\n      visibleList: [...prevState.list],\n    }));\n  };\n\n  onSelectChange = ({ target }) => {\n    const { value } = target;\n\n    this.setState(() => ({\n      selectedValue: value,\n      visibleList: goodsFromServer\n        .filter(good => good.length >= value),\n    }));\n  };\n\n  render() {\n    return (\n      <div className=\"goods_block\">\n        {\n          (!this.state.loaded ? (\n            <button onClick={this.handler} type=\"button\">\n              Start\n            </button>\n          ) : (\n            <div>\n              <button onClick={this.reverseList} type=\"button\">\n                Reverse\n              </button>\n              <button onClick={this.sortAlphabetical} type=\"button\">\n                Sort A-Z\n              </button>\n              <button onClick={this.sortListLength} type=\"button\">\n                Sort by length\n              </button>\n              <button onClick={this.resetList} type=\"button\">\n                Reset\n              </button>\n\n              <select\n                value={this.state.selectedValue}\n                onChange={event => this.onSelectChange(event)}\n              >\n                {[...Array(10).keys()].map(i => i + 1)\n                  .map(item => <option value={item} key={item}>{item}</option>)}\n              </select>\n\n              <ListOfGoods list={this.state.visibleList} />\n            </div>\n          )\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}